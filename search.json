[{"path":"https://vbonhomme.github.io/mevolCVP2/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU Lesser General Public License","title":"GNU Lesser General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed. version GNU Lesser General Public License incorporates terms conditions version 3 GNU General Public License, supplemented additional permissions listed .","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/LICENSE.html","id":"id_0-additional-definitions","dir":"","previous_headings":"","what":"0. Additional Definitions","title":"GNU Lesser General Public License","text":"used herein, “License” refers version 3 GNU Lesser General Public License, “GNU GPL” refers version 3 GNU General Public License. “Library” refers covered work governed License, Application Combined Work defined . “Application” work makes use interface provided Library, otherwise based Library. Defining subclass class defined Library deemed mode using interface provided Library. “Combined Work” work produced combining linking Application Library. particular version Library Combined Work made also called “Linked Version”. “Minimal Corresponding Source” Combined Work means Corresponding Source Combined Work, excluding source code portions Combined Work , considered isolation, based Application, Linked Version. “Corresponding Application Code” Combined Work means object code /source code Application, including data utility programs needed reproducing Combined Work Application, excluding System Libraries Combined Work.","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/LICENSE.html","id":"id_1-exception-to-section-3-of-the-gnu-gpl","dir":"","previous_headings":"","what":"1. Exception to Section 3 of the GNU GPL","title":"GNU Lesser General Public License","text":"may convey covered work sections 3 4 License without bound section 3 GNU GPL.","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/LICENSE.html","id":"id_2-conveying-modified-versions","dir":"","previous_headings":"","what":"2. Conveying Modified Versions","title":"GNU Lesser General Public License","text":"modify copy Library, , modifications, facility refers function data supplied Application uses facility (argument passed facility invoked), may convey copy modified version: ) License, provided make good faith effort ensure , event Application supply function data, facility still operates, performs whatever part purpose remains meaningful, b) GNU GPL, none additional permissions License applicable copy.","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/LICENSE.html","id":"id_3-object-code-incorporating-material-from-library-header-files","dir":"","previous_headings":"","what":"3. Object Code Incorporating Material from Library Header Files","title":"GNU Lesser General Public License","text":"object code form Application may incorporate material header file part Library. may convey object code terms choice, provided , incorporated material limited numerical parameters, data structure layouts accessors, small macros, inline functions templates (ten fewer lines length), following: ) Give prominent notice copy object code Library used Library use covered License. b) Accompany object code copy GNU GPL license document.","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/LICENSE.html","id":"id_4-combined-works","dir":"","previous_headings":"","what":"4. Combined Works","title":"GNU Lesser General Public License","text":"may convey Combined Work terms choice , taken together, effectively restrict modification portions Library contained Combined Work reverse engineering debugging modifications, also following: ) Give prominent notice copy Combined Work Library used Library use covered License. b) Accompany Combined Work copy GNU GPL license document. c) Combined Work displays copyright notices execution, include copyright notice Library among notices, well reference directing user copies GNU GPL license document. d) one following: 0) Convey Minimal Corresponding Source terms License, Corresponding Application Code form suitable , terms permit, user recombine relink Application modified version Linked Version produce modified Combined Work, manner specified section 6 GNU GPL conveying Corresponding Source. 1) Use suitable shared library mechanism linking Library. suitable mechanism one () uses run time copy Library already present user’s computer system, (b) operate properly modified version Library interface-compatible Linked Version. e) Provide Installation Information, otherwise required provide information section 6 GNU GPL, extent information necessary install execute modified version Combined Work produced recombining relinking Application modified version Linked Version. (use option 4d0, Installation Information must accompany Minimal Corresponding Source Corresponding Application Code. use option 4d1, must provide Installation Information manner specified section 6 GNU GPL conveying Corresponding Source.)","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/LICENSE.html","id":"id_5-combined-libraries","dir":"","previous_headings":"","what":"5. Combined Libraries","title":"GNU Lesser General Public License","text":"may place library facilities work based Library side side single library together library facilities Applications covered License, convey combined library terms choice, following: ) Accompany combined library copy work based Library, uncombined library facilities, conveyed terms License. b) Give prominent notice combined library part work based Library, explaining find accompanying uncombined form work.","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/LICENSE.html","id":"id_6-revised-versions-of-the-gnu-lesser-general-public-license","dir":"","previous_headings":"","what":"6. Revised Versions of the GNU Lesser General Public License","title":"GNU Lesser General Public License","text":"Free Software Foundation may publish revised /new versions GNU Lesser General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Library received specifies certain numbered version GNU Lesser General Public License “later version” applies , option following terms conditions either published version later version published Free Software Foundation. Library received specify version number GNU Lesser General Public License, may choose version GNU Lesser General Public License ever published Free Software Foundation. Library received specifies proxy can decide whether future versions GNU Lesser General Public License shall apply, proxy’s public statement acceptance version permanent authorization choose version Library.","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/articles/manual.html","id":"data-presentation","dir":"Articles","previous_headings":"","what":"Data presentation","title":"","text":", analyses start data.frame : first column grouping structure can turned factor (eg factor character) least one column (many ) quantitative variable. dataset available within package, named pig (see ?pig) borrowed JAS paper. Let’s look first last 3 rows first 3 variables columns:","code":"minipig <- pig[c(1:3, 168:171), 1:4] minipig #> # A tibble: 7 × 4 #>   sp           PC1       PC2       PC3 #>   <fct>      <dbl>     <dbl>     <dbl> #> 1 WB    -0.0247     0.00722  -0.000179 #> 2 WB    -0.00864    0.0240   -0.000265 #> 3 WB     0.0254    -0.000168  0.0101   #> 4 DP     0.0000239  0.0106    0.00964  #> 5 DP    -0.0420     0.00126  -0.00753  #> 6 DP    -0.0121     0.00378  -0.00159  #> 7 DP    -0.0504    -0.000302  0.00555"},{"path":"https://vbonhomme.github.io/mevolCVP2/articles/manual.html","id":"helpers","dir":"Articles","previous_headings":"","what":"Helpers","title":"","text":"present helpers recipes can easily reused analyses.","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/articles/manual.html","id":"randomizing-and-selecting-columns","dir":"Articles","previous_headings":"Helpers","what":"Randomizing and selecting columns","title":"","text":"Three core helpers ease common operations. randomize shuffles first column, ie randomize grouping labels; balance resample rows using grouping labels, n individuals group. n_ind , default, smallest group size. Also, sampling done replace=TRUE default retain select n_col variables columns (default). ease permutations, wrapped partition() returns list four different datasets self-explanatory names:","code":"randomize(minipig)  # look at the first column #> # A tibble: 7 × 4 #>   sp           PC1       PC2       PC3 #>   <fct>      <dbl>     <dbl>     <dbl> #> 1 DP    -0.0247     0.00722  -0.000179 #> 2 WB    -0.00864    0.0240   -0.000265 #> 3 DP     0.0254    -0.000168  0.0101   #> 4 WB     0.0000239  0.0106    0.00964  #> 5 DP    -0.0420     0.00126  -0.00753  #> 6 WB    -0.0121     0.00378  -0.00159  #> 7 DP    -0.0504    -0.000302  0.00555 balance(minipig, n_ind=2) # count rows in each group #> # A tibble: 4 × 4 #>   sp           PC1       PC2       PC3 #>   <fct>      <dbl>     <dbl>     <dbl> #> 1 DP     0.0000239  0.0106    0.00964  #> 2 DP    -0.0420     0.00126  -0.00753  #> 3 WB    -0.00864    0.0240   -0.000265 #> 4 WB     0.0254    -0.000168  0.0101 retain(minipig, n_col=2)  # count quantitative variables columns #> # A tibble: 7 × 3 #>   sp           PC1       PC2 #>   <fct>      <dbl>     <dbl> #> 1 WB    -0.0247     0.00722  #> 2 WB    -0.00864    0.0240   #> 3 WB     0.0254    -0.000168 #> 4 DP     0.0000239  0.0106   #> 5 DP    -0.0420     0.00126  #> 6 DP    -0.0121     0.00378  #> 7 DP    -0.0504    -0.000302 pigs1 <- partition(minipig, n_ind=3) pigs1 #> $original #> # A tibble: 7 × 4 #>   sp           PC1       PC2       PC3 #>   <fct>      <dbl>     <dbl>     <dbl> #> 1 WB    -0.0247     0.00722  -0.000179 #> 2 WB    -0.00864    0.0240   -0.000265 #> 3 WB     0.0254    -0.000168  0.0101   #> 4 DP     0.0000239  0.0106    0.00964  #> 5 DP    -0.0420     0.00126  -0.00753  #> 6 DP    -0.0121     0.00378  -0.00159  #> 7 DP    -0.0504    -0.000302  0.00555  #>  #> $random #> # A tibble: 7 × 4 #>   sp           PC1       PC2       PC3 #>   <fct>      <dbl>     <dbl>     <dbl> #> 1 DP    -0.0247     0.00722  -0.000179 #> 2 DP    -0.00864    0.0240   -0.000265 #> 3 WB     0.0254    -0.000168  0.0101   #> 4 DP     0.0000239  0.0106    0.00964  #> 5 WB    -0.0420     0.00126  -0.00753  #> 6 DP    -0.0121     0.00378  -0.00159  #> 7 WB    -0.0504    -0.000302  0.00555  #>  #> $balanced #> # A tibble: 6 × 4 #>   sp           PC1       PC2       PC3 #>   <fct>      <dbl>     <dbl>     <dbl> #> 1 DP    -0.0504    -0.000302  0.00555  #> 2 DP     0.0000239  0.0106    0.00964  #> 3 DP    -0.0420     0.00126  -0.00753  #> 4 WB    -0.0247     0.00722  -0.000179 #> 5 WB    -0.0247     0.00722  -0.000179 #> 6 WB    -0.0247     0.00722  -0.000179 #>  #> $balanced_random #> # A tibble: 6 × 4 #>   sp           PC1       PC2       PC3 #>   <fct>      <dbl>     <dbl>     <dbl> #> 1 DP     0.0000239  0.0106    0.00964  #> 2 WB     0.0000239  0.0106    0.00964  #> 3 DP    -0.0504    -0.000302  0.00555  #> 4 WB    -0.00864    0.0240   -0.000265 #> 5 DP    -0.0247     0.00722  -0.000179 #> 6 WB     0.0254    -0.000168  0.0101"},{"path":"https://vbonhomme.github.io/mevolCVP2/articles/manual.html","id":"lda-calculation-and-digestion","dir":"Articles","previous_headings":"Helpers","what":"LDA calculation and digestion","title":"","text":"workhorse package thin wrapper top MASS::lda directly returns confusion matrix. MASS::lda passed CV=TRUE returns leave-one-cross-validated predictions, digested confusion matrix. Let’s try full pig dataset: can calculate accuracy indices confusion matrix. later see obtain additional metrics latter. pig “highly” unbalanced terms sample sizes two groups. expect naive LDA dataset biased LDA balanced dataset realistic terms class accuracies. , observe class accuracy WB group (larger factor 3) drastically reduced actually performs less well DP. Whether values better pure random properly tested. expect, binary case, something around 50/50 pure random (ie binomial) can away ideal case. already pretty much everything need!","code":"cm <- lda1(pig) acc(cm) #>       acc  #> 0.8947368 acc_classes(cm) #>        DP        WB  #> 0.7142857 0.9534884 acc_all(cm) #>       acc        DP        WB  #> 0.8947368 0.7142857 0.9534884 pig %>% lda1() %>% acc_classes() #>        DP        WB  #> 0.7380952 0.9534884 pig %>% balance() %>% lda1() %>% acc_classes() #>        DP        WB  #> 0.8809524 0.8333333 pig %>% balance() %>% randomize() %>% lda1() %>% acc_classes() #>       DP       WB  #> 0.547619 0.452381"},{"path":[]},{"path":"https://vbonhomme.github.io/mevolCVP2/articles/manual.html","id":"a-single-round","dir":"Articles","previous_headings":"In action: balancing and permutating","what":"A single round","title":"","text":"Now, gonna go take profit functionnal programming tools provided purrr. familiar package, stop everything go look . results reflect expectations results observed , “hand”, line line. Let’s wrap function accept dataset. also arrange bit comes map nice named tibble. Can see ’re going ? let fun begins let’s replicate permutations.","code":"pig %>% partition() %>% map(\\(.df1) .df1 %>% lda1() %>% acc_all()) #> $original #>       acc        DP        WB  #> 0.8947368 0.7142857 0.9534884  #>  #> $random #>       acc        DP        WB  #> 0.6257310 0.1666667 0.7751938  #>  #> $balanced #>       acc        DP        WB  #> 0.9642857 0.9523810 0.9761905  #>  #> $balanced_random #>       acc        DP        WB  #> 0.4642857 0.5476190 0.3809524 perm1 <- function(x) {   x %>%      partition() %>%      map(\\(.x) .x %>% lda1() %>% acc_all()) %>%      do.call(\"rbind\", .) %>% as_tibble(rownames = \"partition\") } pig %>% perm1() #> # A tibble: 4 × 4 #>   partition         acc    DP    WB #>   <chr>           <dbl> <dbl> <dbl> #> 1 original        0.895 0.714 0.953 #> 2 random          0.673 0.167 0.837 #> 3 balanced        0.810 0.857 0.762 #> 4 balanced_random 0.321 0.333 0.310"},{"path":"https://vbonhomme.github.io/mevolCVP2/articles/manual.html","id":"more-than-a-single-round","dir":"Articles","previous_headings":"In action: balancing and permutating","what":"More than a single round","title":"","text":"go 10 rounds sake speed writing compiling package feel free change side. come back full pig use map variant, _dfr version, directly rbinds intermediate list tibble. Feel free try raw map . Everything follows adhere idea: combine helpers, permutations using map friends, summarize graph. Let’s summarise bit dplyr can summatise mean SD:","code":"K=10 pig10 <- map_dfr(seq_len(K), \\(iter) pig %>% perm1()) head(pig10) #> # A tibble: 6 × 4 #>   partition         acc    DP    WB #>   <chr>           <dbl> <dbl> <dbl> #> 1 original        0.901 0.738 0.953 #> 2 random          0.637 0.143 0.798 #> 3 balanced        0.821 0.929 0.714 #> 4 balanced_random 0.571 0.595 0.548 #> 5 original        0.895 0.714 0.953 #> 6 random          0.637 0.190 0.783 pig10 %>%    group_by(partition) %>%    summarize(across(everything(), c(\"median\"=median, \"sd\"=sd))) #> # A tibble: 4 × 7 #>   partition       acc_median  acc_sd DP_median  DP_sd WB_median  WB_sd #>   <chr>                <dbl>   <dbl>     <dbl>  <dbl>     <dbl>  <dbl> #> 1 balanced             0.833 0.0413      0.881 0.0408     0.786 0.0659 #> 2 balanced_random      0.470 0.0764      0.488 0.0856     0.464 0.0985 #> 3 original             0.901 0.00302     0.738 0.0123     0.953 0      #> 4 random               0.637 0.0260      0.190 0.0778     0.791 0.0203"},{"path":"https://vbonhomme.github.io/mevolCVP2/articles/manual.html","id":"summary-and-graph","dir":"Articles","previous_headings":"In action: balancing and permutating","what":"Summary and graph","title":"","text":"Alternatively, get compact table: can also nice graph little pivoting step please ggplot2:  original results one obtain without touching original dataset: global accuracy overestimated weel WB class. look balanced corrected. model performs clearly better balanced_random pure random. Sounds like strong morphological signal !","code":"mean_sd <- function(x) paste0(round(mean(x), 3), \"±\", round(sd(x), 3)) pig10 %>%    group_by(partition) %>%    summarize(across(everything(), mean_sd)) #> # A tibble: 4 × 4 #>   partition       acc         DP          WB          #>   <chr>           <chr>       <chr>       <chr>       #> 1 balanced        0.83±0.041  0.871±0.041 0.788±0.066 #> 2 balanced_random 0.487±0.076 0.49±0.086  0.483±0.099 #> 3 original        0.898±0.003 0.729±0.012 0.953±0     #> 4 random          0.649±0.026 0.19±0.078  0.798±0.02 pig10 %>%    mutate(partition=factor(partition,                            levels=c(\"original\", \"random\", \"balanced_random\", \"balanced\"), ordered=TRUE)) %>% # order partition for graphics purposes   pivot_longer(acc:last_col(), names_to = \"what\") %>% # pivot the tibble to a longer form   ggplot() +    aes(x=partition, y=value, fill=what) +    geom_boxplot() +   theme_minimal()"},{"path":"https://vbonhomme.github.io/mevolCVP2/articles/manual.html","id":"in-action-adding-variable-selection","dir":"Articles","previous_headings":"","what":"In action: adding variable selection","title":"","text":"Let’s sophisticate bit perm1 function allow selecting less variables feed LDA . simply add n_col argument pass retain(), coined partition(): expect 20 components perform better single one. Let’s check single round, indeed: can easily write map. also record number variables make return directly single, rbinded data.frame map_dfr: replicate calculation K times, simply wrap additional layer map: Let’s plot beauty:","code":"perm2 <- function(x, n_col) {   x %>%      retain(n_col) %>%      partition() %>%      map(\\(.x) .x %>% lda1() %>% acc_all()) %>%      do.call(\"rbind\", .) %>% as_tibble(rownames = \"partition\") } pig %>% perm2(1) #> # A tibble: 4 × 4 #>   partition         acc    DP    WB #>   <chr>           <dbl> <dbl> <dbl> #> 1 original        0.813 0.405 0.946 #> 2 random          0.754 0     1     #> 3 balanced        0.774 0.762 0.786 #> 4 balanced_random 0.548 0.5   0.595 pig %>% perm2(20) #> # A tibble: 4 × 4 #>   partition         acc     DP    WB #>   <chr>           <dbl>  <dbl> <dbl> #> 1 original        0.912 0.786  0.953 #> 2 random          0.684 0.0952 0.876 #> 3 balanced        0.940 0.952  0.929 #> 4 balanced_random 0.524 0.5    0.548 z <- map_dfr(1:20, \\(n_col) pig %>% perm2(n_col) %>% mutate(retain=n_col, .before=1)) head(z) #> # A tibble: 6 × 5 #>   retain partition         acc    DP    WB #>    <int> <chr>           <dbl> <dbl> <dbl> #> 1      1 original        0.813 0.405 0.946 #> 2      1 random          0.754 0     1     #> 3      1 balanced        0.798 0.810 0.786 #> 4      1 balanced_random 0.560 0.619 0.5   #> 5      2 original        0.807 0.452 0.922 #> 6      2 random          0.754 0     1 K=10 z <- map_dfr(seq_len(K),         \\(iter) map_dfr(1:20, \\(n_col) pig %>% perm2(n_col) %>% mutate(retain=n_col, .before=1)) %>%            mutate(iter=iter, .before=1) ) head(z) #> # A tibble: 6 × 6 #>    iter retain partition         acc    DP    WB #>   <int>  <int> <chr>           <dbl> <dbl> <dbl> #> 1     1      1 original        0.813 0.405 0.946 #> 2     1      1 random          0.754 0     1     #> 3     1      1 balanced        0.821 0.714 0.929 #> 4     1      1 balanced_random 0.536 0.452 0.619 #> 5     1      2 original        0.807 0.452 0.922 #> 6     1      2 random          0.754 0     1 z %>%    pivot_longer(acc:last_col(), names_to=\"metric\") %>%    ggplot() +    aes(x=retain, y=value, col=partition) +   geom_point(size=0.1) +   geom_smooth() +   facet_grid(~metric) +   xlab(\"number of PC retained\") +   ylab(\"CV accuracy\") +   theme_minimal() #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x'"},{"path":[]},{"path":[]},{"path":"https://vbonhomme.github.io/mevolCVP2/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Vincent Bonhomme. Author, maintainer. Allowen Evin. Author.","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bonhomme V, Evin (2024). mevolCVP2: Permutationnal framework parameterizing Linear Discriminant Analyses. R package version 0.0.1, https://vbonhomme.github.io/mevolCVP2/.","code":"@Manual{,   title = {mevolCVP2: Permutationnal framework for parameterizing Linear Discriminant Analyses},   author = {Vincent Bonhomme and Allowen Evin},   year = {2024},   note = {R package version 0.0.1},   url = {https://vbonhomme.github.io/mevolCVP2/}, }"},{"path":"https://vbonhomme.github.io/mevolCVP2/index.html","id":"mevolcvp2","dir":"","previous_headings":"","what":"Permutationnal framework for parameterizing Linear Discriminant Analyses","title":"Permutationnal framework for parameterizing Linear Discriminant Analyses","text":"goal mevolCVP2 provide general approach helpers parameterize Linear Discriminant Analyses. generalizes seminal idea first published 2013 Allowen Evin colleagues Journal Archaeological Science, follows pre-package version Evin Bonhomme. approach initially used morphometrical analyses may reveal useful fields. morphometrics, massive user Linear Discriminant Analyses. Yet approach deeply changed way see, parameterize LDAs morphometrics, boils , programmatically, helpers propose . vignette presents extensively package architecture well ways flavour upon needs.","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Permutationnal framework for parameterizing Linear Discriminant Analyses","text":"can install development version mevolCVP2 GitHub :","code":"# install.packages(\"pak\") pak::pak(\"vbonhomme/mevolCVP2\")"},{"path":"https://vbonhomme.github.io/mevolCVP2/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Permutationnal framework for parameterizing Linear Discriminant Analyses","text":"basic example shows solve common problem:","code":"library(mevolCVP2) ## basic example code"},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/balance.html","id":null,"dir":"Reference","previous_headings":"","what":"Balance a data.frame — balance","title":"Balance a data.frame — balance","text":"Balance `n` individuals group, taken first column","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/balance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Balance a data.frame — balance","text":"","code":"balance(x, n_ind = min(table(x[[1]])), replace = TRUE)"},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/balance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Balance a data.frame — balance","text":"x data.frame first column grouping column n_ind integer number individuals group. Smallest sample size default. replace logical whether sample replacement (). `TRUE` default.","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/balance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Balance a data.frame — balance","text":"balanced data.frame","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/balance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Balance a data.frame — balance","text":"Note [sample]() done `replace=TRUE`","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/balance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Balance a data.frame — balance","text":"","code":"# untouched dataset is not balanced table(pig$sp) #>  #>  DP  WB  #>  42 129  # balance helps table(balance(pig)$sp) #>  #> DP WB  #> 42 42"},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/lda1.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear discricriminant analysis — lda1","title":"Linear discricriminant analysis — lda1","text":"thin wrapper around `MASS::lda` returns (named) confusion matrix","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/lda1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear discricriminant analysis — lda1","text":"","code":"lda1(x)"},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/lda1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear discricriminant analysis — lda1","text":"x data.frame","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/lda1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear discricriminant analysis — lda1","text":"confusion matrix (class `table`)","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/lda1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linear discricriminant analysis — lda1","text":"","code":"pig %>% lda1() #>       predicted #> actual  DP  WB #>     DP  31  11 #>     WB   6 123"},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Confusion matrix metrics — acc","title":"Confusion matrix metrics — acc","text":"accuracy (global class) far may come.","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confusion matrix metrics — acc","text":"","code":"acc(x)  acc_classes(x)  acc_all(x)"},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confusion matrix metrics — acc","text":"x table typically confusion matrix","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confusion matrix metrics — acc","text":"named vector","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/metrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confusion matrix metrics — acc","text":"","code":"x <- iris %>% lda1 x %>% acc() #>       acc  #> 0.1347518  x %>% acc_classes() #>       4.3       4.4       4.5       4.6       4.7       4.8       4.9         5  #>       NaN 0.0000000       NaN 0.0000000 0.0000000 0.0000000 0.0000000 0.3000000  #>       5.1       5.2       5.3       5.4       5.5       5.6       5.7       5.8  #> 0.5555556 0.0000000       NaN 0.1666667 0.4285714 0.1666667 0.0000000 0.0000000  #>       5.9         6       6.1       6.2       6.3       6.4       6.5       6.6  #> 0.0000000 0.0000000 0.1666667 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000  #>       6.7       6.8       6.9         7       7.1       7.2       7.3       7.4  #> 0.2500000 0.0000000 0.0000000       NaN       NaN 0.3333333       NaN       NaN  #>       7.6       7.7       7.9  #>       NaN 0.5000000       NaN  x %>% acc_all() #>       acc       4.3       4.4       4.5       4.6       4.7       4.8       4.9  #> 0.1347518       NaN 0.0000000       NaN 0.0000000 0.0000000 0.0000000 0.0000000  #>         5       5.1       5.2       5.3       5.4       5.5       5.6       5.7  #> 0.3000000 0.5555556 0.0000000       NaN 0.1666667 0.4285714 0.1666667 0.0000000  #>       5.8       5.9         6       6.1       6.2       6.3       6.4       6.5  #> 0.0000000 0.0000000 0.0000000 0.1666667 0.0000000 0.0000000 0.0000000 0.0000000  #>       6.6       6.7       6.8       6.9         7       7.1       7.2       7.3  #> 0.0000000 0.2500000 0.0000000 0.0000000       NaN       NaN 0.3333333       NaN  #>       7.4       7.6       7.7       7.9  #>       NaN       NaN 0.5000000       NaN"},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/partition.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain different flavours of a dataset — partition","title":"Obtain different flavours of a dataset — partition","text":"returns list four variations data.set:","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/partition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain different flavours of a dataset — partition","text":"","code":"partition(x, n_ind = min(table(x[[1]])))"},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/partition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain different flavours of a dataset — partition","text":"x data.frame n_ind passed [balance()] (smallest sample size default)","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/partition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain different flavours of a dataset — partition","text":"named list described ","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/partition.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain different flavours of a dataset — partition","text":"* original: dataset passed, untouched * random:   original shuffled first (ie grouping) column * balanced: original balanced first column * balanced_random: balanced randomized first column","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/partition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain different flavours of a dataset — partition","text":"","code":"pig %>% partition() #> $original #> # A tibble: 171 × 51 #>    sp         PC1      PC2      PC3      PC4      PC5      PC6      PC7      PC8 #>    <fct>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #>  1 WB    -0.0247   7.22e-3 -1.79e-4  0.0119  -9.82e-4  8.82e-3 -0.0104   0.00659 #>  2 WB    -0.00864  2.40e-2 -2.65e-4  0.00924 -1.43e-2 -1.99e-2 -0.00201  0.00375 #>  3 WB     0.0254  -1.68e-4  1.01e-2  0.00135 -6.58e-3 -1.40e-2 -0.0162  -0.00879 #>  4 WB    -0.0438  -2.98e-3 -9.55e-4  0.00969  1.86e-2  3.02e-3 -0.00255 -0.00433 #>  5 WB     0.0137   4.87e-3  1.76e-2 -0.00392 -1.16e-2 -5.32e-3 -0.00227 -0.00114 #>  6 WB     0.0493  -1.68e-2  2.86e-2 -0.00285  7.15e-3  4.62e-3 -0.0142  -0.00286 #>  7 WB    -0.0172  -2.36e-2  1.14e-2 -0.0116  -3.83e-3 -1.07e-2 -0.00379  0.00158 #>  8 WB     0.00194 -1.01e-2  2.05e-2  0.00390  1.53e-2 -8.58e-4 -0.0147  -0.00140 #>  9 WB    -0.00865  4.70e-3  8.53e-3  0.0149   1.97e-5 -6.02e-3  0.00608  0.00210 #> 10 WB     0.00141  4.27e-3  1.20e-2  0.00546 -1.34e-2 -6.73e-4  0.00912  0.00124 #> # ℹ 161 more rows #> # ℹ 42 more variables: PC9 <dbl>, PC10 <dbl>, PC11 <dbl>, PC12 <dbl>, #> #   PC13 <dbl>, PC14 <dbl>, PC15 <dbl>, PC16 <dbl>, PC17 <dbl>, PC18 <dbl>, #> #   PC19 <dbl>, PC20 <dbl>, PC21 <dbl>, PC22 <dbl>, PC23 <dbl>, PC24 <dbl>, #> #   PC25 <dbl>, PC26 <dbl>, PC27 <dbl>, PC28 <dbl>, PC29 <dbl>, PC30 <dbl>, #> #   PC31 <dbl>, PC32 <dbl>, PC33 <dbl>, PC34 <dbl>, PC35 <dbl>, PC36 <dbl>, #> #   PC37 <dbl>, PC38 <dbl>, PC39 <dbl>, PC40 <dbl>, PC41 <dbl>, PC42 <dbl>, … #>  #> $random #> # A tibble: 171 × 51 #>    sp         PC1      PC2      PC3      PC4      PC5      PC6      PC7      PC8 #>    <fct>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #>  1 WB    -0.0247   7.22e-3 -1.79e-4  0.0119  -9.82e-4  8.82e-3 -0.0104   0.00659 #>  2 DP    -0.00864  2.40e-2 -2.65e-4  0.00924 -1.43e-2 -1.99e-2 -0.00201  0.00375 #>  3 WB     0.0254  -1.68e-4  1.01e-2  0.00135 -6.58e-3 -1.40e-2 -0.0162  -0.00879 #>  4 WB    -0.0438  -2.98e-3 -9.55e-4  0.00969  1.86e-2  3.02e-3 -0.00255 -0.00433 #>  5 WB     0.0137   4.87e-3  1.76e-2 -0.00392 -1.16e-2 -5.32e-3 -0.00227 -0.00114 #>  6 DP     0.0493  -1.68e-2  2.86e-2 -0.00285  7.15e-3  4.62e-3 -0.0142  -0.00286 #>  7 WB    -0.0172  -2.36e-2  1.14e-2 -0.0116  -3.83e-3 -1.07e-2 -0.00379  0.00158 #>  8 WB     0.00194 -1.01e-2  2.05e-2  0.00390  1.53e-2 -8.58e-4 -0.0147  -0.00140 #>  9 WB    -0.00865  4.70e-3  8.53e-3  0.0149   1.97e-5 -6.02e-3  0.00608  0.00210 #> 10 WB     0.00141  4.27e-3  1.20e-2  0.00546 -1.34e-2 -6.73e-4  0.00912  0.00124 #> # ℹ 161 more rows #> # ℹ 42 more variables: PC9 <dbl>, PC10 <dbl>, PC11 <dbl>, PC12 <dbl>, #> #   PC13 <dbl>, PC14 <dbl>, PC15 <dbl>, PC16 <dbl>, PC17 <dbl>, PC18 <dbl>, #> #   PC19 <dbl>, PC20 <dbl>, PC21 <dbl>, PC22 <dbl>, PC23 <dbl>, PC24 <dbl>, #> #   PC25 <dbl>, PC26 <dbl>, PC27 <dbl>, PC28 <dbl>, PC29 <dbl>, PC30 <dbl>, #> #   PC31 <dbl>, PC32 <dbl>, PC33 <dbl>, PC34 <dbl>, PC35 <dbl>, PC36 <dbl>, #> #   PC37 <dbl>, PC38 <dbl>, PC39 <dbl>, PC40 <dbl>, PC41 <dbl>, PC42 <dbl>, … #>  #> $balanced #> # A tibble: 84 × 51 #>    sp         PC1      PC2      PC3      PC4      PC5      PC6      PC7      PC8 #>    <fct>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #>  1 DP    -0.0795   1.05e-2 -0.00151  0.00337 -8.65e-3 -2.58e-3  0.0113  -0.0134  #>  2 DP    -0.0504  -3.02e-4  0.00555 -0.00218 -1.21e-2  8.24e-3 -0.00513  0.00286 #>  3 DP     0.0238  -1.47e-2  0.0118  -0.0264  -1.52e-2 -1.13e-2  0.0161  -0.00482 #>  4 DP    -0.0971  -8.33e-3 -0.0433   0.00436  2.28e-3  6.56e-3 -0.0148  -0.00986 #>  5 DP    -0.0791  -7.97e-3  0.00727  0.00714 -8.65e-3  1.02e-2  0.0110  -0.0179  #>  6 DP     0.0190  -3.28e-3 -0.00412 -0.00478  1.64e-2 -1.57e-2  0.00642 -0.00433 #>  7 DP     0.0238  -1.47e-2  0.0118  -0.0264  -1.52e-2 -1.13e-2  0.0161  -0.00482 #>  8 DP    -0.00928 -3.65e-2  0.0107  -0.0235  -9.88e-4  7.92e-4 -0.00297  0.00382 #>  9 DP    -0.111   -5.70e-2  0.00831  0.00552 -3.54e-2 -3.33e-2 -0.00945 -0.00685 #> 10 DP    -0.0751   2.45e-2 -0.00527 -0.00418  1.11e-3 -1.63e-2 -0.0164  -0.00319 #> # ℹ 74 more rows #> # ℹ 42 more variables: PC9 <dbl>, PC10 <dbl>, PC11 <dbl>, PC12 <dbl>, #> #   PC13 <dbl>, PC14 <dbl>, PC15 <dbl>, PC16 <dbl>, PC17 <dbl>, PC18 <dbl>, #> #   PC19 <dbl>, PC20 <dbl>, PC21 <dbl>, PC22 <dbl>, PC23 <dbl>, PC24 <dbl>, #> #   PC25 <dbl>, PC26 <dbl>, PC27 <dbl>, PC28 <dbl>, PC29 <dbl>, PC30 <dbl>, #> #   PC31 <dbl>, PC32 <dbl>, PC33 <dbl>, PC34 <dbl>, PC35 <dbl>, PC36 <dbl>, #> #   PC37 <dbl>, PC38 <dbl>, PC39 <dbl>, PC40 <dbl>, PC41 <dbl>, PC42 <dbl>, … #>  #> $balanced_random #> # A tibble: 84 × 51 #>    sp         PC1      PC2      PC3      PC4      PC5      PC6      PC7      PC8 #>    <fct>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #>  1 DP     0.00508 -8.73e-3 -0.00596 -0.00452  7.88e-4 -0.00345 -9.08e-5  0.00338 #>  2 WB     0.0374  -2.32e-2  0.0116  -0.0153   3.94e-3 -0.0103   1.52e-2 -0.0135  #>  3 DP    -0.111   -5.70e-2  0.00831  0.00552 -3.54e-2 -0.0333  -9.45e-3 -0.00685 #>  4 WB    -0.0269  -1.20e-2 -0.00834 -0.0112   5.47e-3 -0.00261  9.14e-3 -0.00153 #>  5 WB    -0.00876 -2.24e-2 -0.0256  -0.0103   1.09e-3 -0.00316  8.02e-4 -0.00915 #>  6 DP     0.0138   1.31e-2 -0.00803  0.00174  1.91e-2 -0.00591  1.46e-2 -0.00762 #>  7 DP    -0.0400   9.77e-4  0.00657 -0.00292  4.25e-3  0.00793 -5.02e-5 -0.00935 #>  8 WB    -0.0751   2.45e-2 -0.00527 -0.00418  1.11e-3 -0.0163  -1.64e-2 -0.00319 #>  9 WB    -0.0170   7.31e-4 -0.0118  -0.00323  1.04e-2 -0.0133  -7.02e-4 -0.00648 #> 10 WB    -0.0795   1.05e-2 -0.00151  0.00337 -8.65e-3 -0.00258  1.13e-2 -0.0134  #> # ℹ 74 more rows #> # ℹ 42 more variables: PC9 <dbl>, PC10 <dbl>, PC11 <dbl>, PC12 <dbl>, #> #   PC13 <dbl>, PC14 <dbl>, PC15 <dbl>, PC16 <dbl>, PC17 <dbl>, PC18 <dbl>, #> #   PC19 <dbl>, PC20 <dbl>, PC21 <dbl>, PC22 <dbl>, PC23 <dbl>, PC24 <dbl>, #> #   PC25 <dbl>, PC26 <dbl>, PC27 <dbl>, PC28 <dbl>, PC29 <dbl>, PC30 <dbl>, #> #   PC31 <dbl>, PC32 <dbl>, PC33 <dbl>, PC34 <dbl>, PC35 <dbl>, PC36 <dbl>, #> #   PC37 <dbl>, PC38 <dbl>, PC39 <dbl>, PC40 <dbl>, PC41 <dbl>, PC42 <dbl>, … #>"},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/pig.html","id":null,"dir":"Reference","previous_headings":"","what":"Data from JAS paper — pig","title":"Data from JAS paper — pig","text":"Data JAS paper","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/pig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data from JAS paper — pig","text":"","code":"pig"},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/pig.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data from JAS paper — pig","text":"data.frame containing grouping factor first column first 50 principal components","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/pig.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data from JAS paper — pig","text":"<https://doi.org/10.1016/j.jas.2012.08.005>","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/randomize.html","id":null,"dir":"Reference","previous_headings":"","what":"Randomize a data.frame — randomize","title":"Randomize a data.frame — randomize","text":"Randomize data.frame shuffling first column","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/randomize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Randomize a data.frame — randomize","text":"","code":"randomize(x)"},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/randomize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Randomize a data.frame — randomize","text":"x data.frame first column grouping column","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/randomize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Randomize a data.frame — randomize","text":"shuffled data.frame","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/randomize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Randomize a data.frame — randomize","text":"","code":"# untouched dataset head(pig$sp, 10) #>  [1] WB WB WB WB WB WB WB WB WB WB #> Levels: DP WB # now randomized head(randomize(pig)$sp, 10) #>  [1] DP WB DP WB DP WB DP DP WB WB #> Levels: DP WB"},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/retain.html","id":null,"dir":"Reference","previous_headings":"","what":"Retain some variables from a data.frame — retain","title":"Retain some variables from a data.frame — retain","text":"Retain `n` columns, first let apart.","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/retain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retain some variables from a data.frame — retain","text":"","code":"retain(x, n_col = ncol(x) - 1)"},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/retain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retain some variables from a data.frame — retain","text":"x data.frame first column grouping column n_col integer number columns retain. default.","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/retain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retain some variables from a data.frame — retain","text":"data.frame","code":""},{"path":"https://vbonhomme.github.io/mevolCVP2/reference/retain.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retain some variables from a data.frame — retain","text":"","code":"# untouched dataset with all its columns ncol(pig) #> [1] 51 # after retaining only 12 (plus the 1st as the grouping) ncol(retain(pig, 12)) #> [1] 13"}]
